exporters:
    awsemf/prometheus:
        certificate_file_path: ""
        detailed_metrics: false
        dimension_rollup_option: NoDimensionRollup
        disable_metric_extraction: false
        eks_fargate_container_insights_enabled: false
        endpoint: https://fake_endpoint
        enhanced_container_insights: false
        imds_retries: 1
        local_mode: false
        log_group_name: /aws/ecs/containerinsights/TestCluster/prometheus
        log_retention: 0
        log_stream_name: '{JobName}'
        max_retries: 2
        metric_declarations:
            - dimensions:
                - - Service
              label_matchers:
                - label_names:
                    - Service
                  regex: nginx.*
                  separator: ;
              metric_name_selectors:
                - ^nginx_request_count$
            - dimensions: []
              label_matchers:
                - label_names:
                    - Namespace
                  regex: default
                  separator: ;
              metric_name_selectors:
                - .*
            - dimensions:
                - - name
              label_matchers:
                - label_names:
                    - name
                  regex: .*
                  separator: ;
              metric_name_selectors:
                - ^.*$
            - dimensions:
                - - name
              label_matchers:
                - label_names:
                    - name
                  regex: .*
                  separator: ;
              metric_name_selectors:
                - ^node_cpu_guest_seconds_total$
        metric_descriptors:
            - metric_name: nginx_request_count
              overwrite: false
              unit: Count
        middleware: agenthealth/logs
        namespace: CustomizedNamespace
        no_verify_ssl: false
        num_workers: 8
        output_destination: cloudwatch
        profile: ""
        proxy_address: ""
        region: us-east-1
        request_timeout_seconds: 30
        resource_arn: ""
        resource_to_telemetry_conversion:
            enabled: true
        retain_initial_value_of_delta_metric: false
        role_arn: ""
        version: "0"
extensions:
    agenthealth/logs:
        is_usage_data_enabled: true
        stats:
            operations:
                - PutLogEvents
            usage_flags:
                mode: EC2
                region_type: ACJ
    entitystore:
        mode: ec2
        region: us-east-1
processors:
    batch/prometheus:
        metadata_cardinality_limit: 1000
        send_batch_max_size: 0
        send_batch_size: 8192
        timeout: 30s
    resourcedetection:
      aks:
        resource_attributes:
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          k8s.cluster.name:
            enabled: false
      azure:
        resource_attributes:
          azure.resourcegroup.name:
            enabled: true
          azure.vm.name:
            enabled: true
          azure.vm.scaleset.name:
            enabled: true
          azure.vm.size:
            enabled: true
          cloud.account.id:
            enabled: true
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          cloud.region:
            enabled: true
          host.id:
            enabled: true
          host.name:
            enabled: true
        tags: []
      compression: ""
      consul:
        address: ""
        datacenter: ""
        namespace: ""
        resource_attributes:
          cloud.region:
            enabled: true
          host.id:
            enabled: true
          host.name:
            enabled: true
        token_file: ""
      detectors:
        - eks
        - env
        - ec2
      disable_keep_alives: false
      docker:
        resource_attributes:
          host.name:
            enabled: true
          os.type:
            enabled: true
      ec2:
        resource_attributes:
          cloud.account.id:
            enabled: true
          cloud.availability_zone:
            enabled: true
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          cloud.region:
            enabled: true
          host.id:
            enabled: true
          host.image.id:
            enabled: true
          host.name:
            enabled: true
          host.type:
            enabled: true
        tags:
          - ^kubernetes.io/cluster/.*$
          - ^aws:autoscaling:groupName
      ecs:
        resource_attributes:
          aws.ecs.cluster.arn:
            enabled: true
          aws.ecs.launchtype:
            enabled: true
          aws.ecs.task.arn:
            enabled: true
          aws.ecs.task.family:
            enabled: true
          aws.ecs.task.id:
            enabled: true
          aws.ecs.task.revision:
            enabled: true
          aws.log.group.arns:
            enabled: true
          aws.log.group.names:
            enabled: true
          aws.log.stream.arns:
            enabled: true
          aws.log.stream.names:
            enabled: true
          cloud.account.id:
            enabled: true
          cloud.availability_zone:
            enabled: true
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          cloud.region:
            enabled: true
      eks:
        resource_attributes:
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          k8s.cluster.name:
            enabled: false
      elasticbeanstalk:
        resource_attributes:
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          deployment.environment:
            enabled: true
          service.instance.id:
            enabled: true
          service.version:
            enabled: true
      endpoint: ""
      gcp:
        resource_attributes:
          cloud.account.id:
            enabled: true
          cloud.availability_zone:
            enabled: true
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          cloud.region:
            enabled: true
          faas.id:
            enabled: true
          faas.instance:
            enabled: true
          faas.name:
            enabled: true
          faas.version:
            enabled: true
          gcp.cloud_run.job.execution:
            enabled: true
          gcp.cloud_run.job.task_index:
            enabled: true
          gcp.gce.instance.hostname:
            enabled: false
          gcp.gce.instance.name:
            enabled: false
          host.id:
            enabled: true
          host.name:
            enabled: true
          host.type:
            enabled: true
          k8s.cluster.name:
            enabled: true
      heroku:
        resource_attributes:
          cloud.provider:
            enabled: true
          heroku.app.id:
            enabled: true
          heroku.dyno.id:
            enabled: true
          heroku.release.commit:
            enabled: true
          heroku.release.creation_timestamp:
            enabled: true
          service.instance.id:
            enabled: true
          service.name:
            enabled: true
          service.version:
            enabled: true
      http2_ping_timeout: 0s
      http2_read_idle_timeout: 0s
      idle_conn_timeout: 1m30s
      k8snode:
        auth_type: serviceAccount
        context: ""
        kube_config_path: ""
        node_from_env_var: ""
        resource_attributes:
          k8s.node.name:
            enabled: true
          k8s.node.uid:
            enabled: true
      lambda:
        resource_attributes:
          aws.log.group.names:
            enabled: true
          aws.log.stream.names:
            enabled: true
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          cloud.region:
            enabled: true
          faas.instance:
            enabled: true
          faas.max_memory:
            enabled: true
          faas.name:
            enabled: true
          faas.version:
            enabled: true
      max_idle_conns: 100
      openshift:
        address: ""
        resource_attributes:
          cloud.platform:
            enabled: true
          cloud.provider:
            enabled: true
          cloud.region:
            enabled: true
          k8s.cluster.name:
            enabled: true
        tls:
          ca_file: ""
          cert_file: ""
          include_system_ca_certs_pool: false
          insecure: false
          insecure_skip_verify: false
          key_file: ""
          max_version: ""
          min_version: ""
          reload_interval: 0s
          server_name_override: ""
        token: ""
      override: true
      proxy_url: ""
      read_buffer_size: 0
      system:
        resource_attributes:
          host.arch:
            enabled: false
          host.cpu.cache.l2.size:
            enabled: false
          host.cpu.family:
            enabled: false
          host.cpu.model.id:
            enabled: false
          host.cpu.model.name:
            enabled: false
          host.cpu.stepping:
            enabled: false
          host.cpu.vendor.id:
            enabled: false
          host.id:
            enabled: false
          host.ip:
            enabled: false
          host.mac:
            enabled: false
          host.name:
            enabled: true
          os.description:
            enabled: false
          os.type:
            enabled: true
      timeout: 2s
      tls:
        ca_file: ""
        cert_file: ""
        include_system_ca_certs_pool: false
        insecure: false
        insecure_skip_verify: false
        key_file: ""
        max_version: ""
        min_version: ""
        reload_interval: 0s
        server_name_override: ""
      write_buffer_size: 0
receivers:
    telegraf_prometheus:
        collection_interval: 1m0s
        initial_delay: 1s
        timeout: 0s
service:
    extensions:
        - agenthealth/logs
        - entitystore
    pipelines:
        metrics/prometheus:
            exporters:
                - awsemf/prometheus
            processors:
                - batch/prometheus
                - resourcedetection
            receivers:
                - telegraf_prometheus
    telemetry:
        logs:
            development: false
            disable_caller: false
            disable_stacktrace: false
            encoding: console
            level: info
            sampling:
                enabled: true
                initial: 2
                thereafter: 500
                tick: 10s
        metrics:
            address: ""
            level: None
        traces: {}
